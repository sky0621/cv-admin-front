/* tslint:disable */
/* eslint-disable */
/**
 * CV API
 * CV API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { UserNoteItem } from "./UserNoteItem";
import {
  UserNoteItemFromJSON,
  UserNoteItemFromJSONTyped,
  UserNoteItemToJSON,
} from "./UserNoteItem";

/**
 * １ユーザーの注釈
 * @export
 * @interface UserNote
 */
export interface UserNote {
  /**
   * ラベル
   * @type {string}
   * @memberof UserNote
   */
  label?: string;
  /**
   * メモ
   * @type {string}
   * @memberof UserNote
   */
  memo?: string;
  /**
   *
   * @type {Array<UserNoteItem>}
   * @memberof UserNote
   */
  items?: Array<UserNoteItem>;
}

/**
 * Check if a given object implements the UserNote interface.
 */
export function instanceOfUserNote(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UserNoteFromJSON(json: any): UserNote {
  return UserNoteFromJSONTyped(json, false);
}

export function UserNoteFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UserNote {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    label: !exists(json, "label") ? undefined : json["label"],
    memo: !exists(json, "memo") ? undefined : json["memo"],
    items: !exists(json, "items")
      ? undefined
      : (json["items"] as Array<any>).map(UserNoteItemFromJSON),
  };
}

export function UserNoteToJSON(value?: UserNote | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    label: value.label,
    memo: value.memo,
    items:
      value.items === undefined
        ? undefined
        : (value.items as Array<any>).map(UserNoteItemToJSON),
  };
}
