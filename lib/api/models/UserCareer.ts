/* tslint:disable */
/* eslint-disable */
/**
 * CV API
 * CV API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { CareerPeriodFrom } from "./CareerPeriodFrom";
import {
  CareerPeriodFromFromJSON,
  CareerPeriodFromFromJSONTyped,
  CareerPeriodFromToJSON,
} from "./CareerPeriodFrom";
import type { CareerPeriodTo } from "./CareerPeriodTo";
import {
  CareerPeriodToFromJSON,
  CareerPeriodToFromJSONTyped,
  CareerPeriodToToJSON,
} from "./CareerPeriodTo";
import type { CareerSkillGroup } from "./CareerSkillGroup";
import {
  CareerSkillGroupFromJSON,
  CareerSkillGroupFromJSONTyped,
  CareerSkillGroupToJSON,
} from "./CareerSkillGroup";
import type { CareerTask } from "./CareerTask";
import {
  CareerTaskFromJSON,
  CareerTaskFromJSONTyped,
  CareerTaskToJSON,
} from "./CareerTask";

/**
 * １キャリアグループのキャリア
 * @export
 * @interface UserCareer
 */
export interface UserCareer {
  /**
   * キャリア名
   * @type {string}
   * @memberof UserCareer
   */
  name?: string;
  /**
   * キャリア説明
   * @type {Array<string>}
   * @memberof UserCareer
   */
  description?: Array<string>;
  /**
   *
   * @type {CareerPeriodFrom}
   * @memberof UserCareer
   */
  from?: CareerPeriodFrom;
  /**
   *
   * @type {CareerPeriodTo}
   * @memberof UserCareer
   */
  to?: CareerPeriodTo;
  /**
   * １キャリアのタスク群
   * @type {Array<CareerTask>}
   * @memberof UserCareer
   */
  tasks?: Array<CareerTask>;
  /**
   * １キャリアのスキルグループ群
   * @type {Array<CareerSkillGroup>}
   * @memberof UserCareer
   */
  skillGroups?: Array<CareerSkillGroup>;
}

/**
 * Check if a given object implements the UserCareer interface.
 */
export function instanceOfUserCareer(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UserCareerFromJSON(json: any): UserCareer {
  return UserCareerFromJSONTyped(json, false);
}

export function UserCareerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UserCareer {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: !exists(json, "name") ? undefined : json["name"],
    description: !exists(json, "description") ? undefined : json["description"],
    from: !exists(json, "from")
      ? undefined
      : CareerPeriodFromFromJSON(json["from"]),
    to: !exists(json, "to") ? undefined : CareerPeriodToFromJSON(json["to"]),
    tasks: !exists(json, "tasks")
      ? undefined
      : (json["tasks"] as Array<any>).map(CareerTaskFromJSON),
    skillGroups: !exists(json, "skillGroups")
      ? undefined
      : (json["skillGroups"] as Array<any>).map(CareerSkillGroupFromJSON),
  };
}

export function UserCareerToJSON(value?: UserCareer | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    description: value.description,
    from: CareerPeriodFromToJSON(value.from),
    to: CareerPeriodToToJSON(value.to),
    tasks:
      value.tasks === undefined
        ? undefined
        : (value.tasks as Array<any>).map(CareerTaskToJSON),
    skillGroups:
      value.skillGroups === undefined
        ? undefined
        : (value.skillGroups as Array<any>).map(CareerSkillGroupToJSON),
  };
}
